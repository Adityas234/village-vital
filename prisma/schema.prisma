// Village Vitals Prisma Schema
// This schema defines the database structure for the Village Vitals healthcare monitoring system

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  firstName    String   @map("first_name") @db.VarChar(255)
  lastName     String   @map("last_name") @db.VarChar(255)
  email        String   @unique @db.VarChar(255)
  phone        String   @unique @db.VarChar(255)
  passwordHash String   @map("password_hash") @db.VarChar(255)
  role         UserRole
  isVerified   Boolean  @default(false) @map("is_verified")
  createdAt    DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt    DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)

  // Relations
  healthReports       HealthReport[]
  waterQualityReports WaterQualityReport[]
  alerts              Alert[]
  otpCodes            OtpCode[]

  @@map("users")
}

model OtpCode {
  id        Int      @id @default(autoincrement())
  email     String   @db.VarChar(255)
  otpCode   String   @map("otp_code") @db.VarChar(6)
  expiresAt DateTime @map("expires_at") @db.Timestamp(6)
  used      Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)

  // Relations
  user User? @relation(fields: [email], references: [email])

  @@map("otp_codes")
}

model HealthReport {
  id          Int                   @id @default(autoincrement())
  userId      Int?                  @map("user_id")
  villageName String?               @map("village_name") @db.VarChar(255)
  symptoms    String?               @db.Text
  severity    HealthReportSeverity?
  locationLat Decimal?              @map("location_lat") @db.Decimal
  locationLng Decimal?              @map("location_lng") @db.Decimal
  status      ReportStatus          @default(active)
  createdAt   DateTime              @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt   DateTime              @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)

  // Relations
  user User? @relation(fields: [userId], references: [id])

  @@map("health_reports")
}

model WaterQualityReport {
  id                 Int                        @id @default(autoincrement())
  userId             Int?                       @map("user_id")
  location           String?                    @db.VarChar(255)
  phLevel            Decimal?                   @map("ph_level") @db.Decimal
  turbidity          Decimal?                   @db.Decimal
  contaminationLevel WaterContaminationLevel?   @map("contamination_level")
  locationLat        Decimal?                   @map("location_lat") @db.Decimal
  locationLng        Decimal?                   @map("location_lng") @db.Decimal
  status             ReportStatus               @default(active)
  createdAt          DateTime                   @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt          DateTime                   @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)

  // Relations
  user User? @relation(fields: [userId], references: [id])

  @@map("water_quality_reports")
}

model Alert {
  id             Int           @id @default(autoincrement())
  userId         Int?          @map("user_id")
  title          String        @db.VarChar(255)
  message        String        @db.Text
  type           AlertType?
  severity       AlertSeverity?
  targetAudience AlertAudience? @map("target_audience")
  location       String?       @db.VarChar(255)
  isActive       Boolean       @default(true) @map("is_active")
  createdAt      DateTime      @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt      DateTime      @default(now()) @updatedAt @map("updated_at") @db.Timestamp(6)

  // Relations
  user User? @relation(fields: [userId], references: [id])

  @@map("alerts")
}

// Enums
enum UserRole {
  community
  health_worker @map("health-worker")
  admin

  @@map("user_role")
}

enum HealthReportSeverity {
  low
  medium
  high
  critical

  @@map("health_report_severity")
}

enum WaterContaminationLevel {
  safe
  moderate
  unsafe
  critical

  @@map("water_contamination_level")
}

enum ReportStatus {
  active
  resolved
  under_review

  @@map("report_status")
}

enum AlertType {
  health
  water
  emergency
  general

  @@map("alert_type")
}

enum AlertSeverity {
  info
  warning
  critical
  emergency

  @@map("alert_severity")
}

enum AlertAudience {
  all
  health_workers @map("health-workers")
  community
  admins

  @@map("alert_audience")
}